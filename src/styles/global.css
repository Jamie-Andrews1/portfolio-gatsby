@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;700&display=swap");
:root {
  --width: 300px;
  --x-speed: 13s;
  --y-speed: 7s;
  --transition-speed: 2.2s;
  --font-size: 1.2rem;
  --font-color: #121212;
  --background-color: #ffff;
  --nav-border: #121212;
  --projectBtn: #da3e9c;
  --email: #2c2ceb;
  --projectsClr: #808080;
}
:root.dark {
  --font-color: #d388d3;
  --backgound-color: #121212;
  --nav-border: #ffff;
  --projectBtn: #330000;
  --email: #cccc3a;
  --projectsClr: #ccc;
}
* {
  margin: 0 10px;
  padding: 0;
  text-decoration: none;
  font-family: "Montserrat";
  font-size: var(--font-size);
  color: var(--font-color);
}
html {
  height: 100%;
}
h1 {
  font-size: clamp(3rem, 10vw, 1.5rem);
}
h2 {
  font-size: clamp(2rem, 10vw, 1.2rem);
}
h3 {
  font-size: clamp(1.5rem, 10vw, 1rem);
  font-weight: 400;
}
.title {
  color: #ccc;
}
.wrapper {
  display: flex;
  min-height: 100vh;
  flex-direction: column;
}
.content {
  flex-grow: 1;
}
body {
  background: var(--backgound-color);
  transition: all 0.5s;
  min-height: 100vh;

  display: flex;
  flex-direction: column;
}
.about {
  padding-top: 20px;
}
.about h1 {
  text-align: center;
  margin: 2rem 0;
}
.about p {
  font-size: clamp(1.2rem, 1.3vw, 0.75rem);
  max-width: 75ch;
}
p {
  margin: 16px auto;
  font-size: 1.3rem;
  line-height: 1.6em;
}
.layout {
  max-width: 1200px;
  margin: 0 auto;
}
nav {
  display: grid;
  grid-template-columns: 1fr 1fr;
  margin: 40px 0;
  align-items: center;
}
nav .links {
  display: inline-block;
  text-align: right;
}
nav a {
  display: inline-block;
  margin-left: 20px;
  font-weight: 400;
  padding-bottom: 8px;
  border-bottom: 3px solid transparent;
}
nav .links a:hover {
  border-color: var(--nav-border);
}
@media only screen and (max-width: 600px) {
  * {
    margin: 0 3px;
  }
}
@media only screen and (max-width: 400px) {
  nav .links {
    display: flex;
    flex-direction: column;
  }
  nav a {
    margin-left: 0;
  }
}
footer {
  margin-top: auto;
}
footer p {
  text-align: center;
  color: var(--font-color);
  margin: 40px auto;
}

/*Simple css to style it like a toggle switch*/
.theme-switch-wrapper {
  display: flex;
  align-items: center;
  margin-left: 20px;
}
.theme-switch {
  display: inline-block;
  height: 34px;
  position: relative;
  width: 60px;
}
.theme-switch input {
  display: none;
}
.slider {
  background-color: #ccc;
  bottom: 0;
  cursor: pointer;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  transition: 0.4s;
}

.slider:before {
  background-color: #fff;
  bottom: 4px;
  content: "";
  height: 26px;
  left: 4px;
  position: absolute;
  transition: 0.4s;
  width: 26px;
}

input:checked + .slider {
  background-color: #66bb6a;
}

input:checked + .slider:before {
  transform: translateX(26px);
}

.slider.round {
  border-radius: 34px;
  margin: 0;
}

.slider.round:before {
  border-radius: 50%;
}
:global(.gatsby-image-wrapper-constrained).image {
  display: none;
  width: 30px;
}
@media (min-width: 1400px) {
  :global(.gatsby-image-wrapper-constrained).image {
    display: block;
  }
}
/*  bubble css  */
.wrap {
  width: 400px;
  height: 400px;
  position: relative;
}
.el {
  width: var(--width);
  height: var(--width);
  border-radius: 50%;
  box-shadow: 0 20px 30px rgba(0, 0, 0, 0.2),
    inset 0px 10px 30px 5px rgba(255, 255, 255, 1);
  transition: border-radius var(--transition-speed) linear;
  height: 200px;
  position: absolute;
  width: 200px;
}
.el-wrap.x2 {
  position: absolute;
  top: 0;
  right: 0;
}
.el::after {
  background: -webkit-radial-gradient(
    center,
    ellipse cover,
    rgba(255, 255, 255, 0.5) 0%,
    rgba(255, 255, 255, 0) 70%
  ); /* Chrome10+,Safari5.1+ */
  border-radius: 50%;
  box-shadow: inset 0 20px 30px rgba(255, 255, 255, 0.3);
  content: "";
  height: 180px;
  left: 10px;
  position: absolute;
  width: 180px;
}
.x {
  animation: x var(--x-speed) linear infinite alternate;
}
.x2 {
  animation: x2 var(--x-speed) linear infinite alternate;
}
.y {
  animation: y var(--y-speed) linear infinite alternate;
}

@keyframes x {
  100% {
    transform: translateX(calc(50vw - var(--width)));
  }
}
@keyframes x2 {
  100% {
    transform: translateX(calc(-50vw var(--width)));
  }
}
@keyframes y {
  100% {
    transform: translateY(calc(50vw - var(--width)));
  }
}
